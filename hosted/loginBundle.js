(()=>{var e={718:e=>{const t=e=>{const t=Math.floor(e/36e5),r=Math.floor(e/6e4)%60,a=Math.floor(e/1e3)%60,n=e%1e3;return`${t.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}.${n.toString().padStart(3,"0")}`};e.exports={distanceNoSqrt:(e,t,r,a)=>{const n=r-e,s=a-t;return n*n+s*s},byteToBits:e=>e.toString(2).padStart(8,"0"),byteFromBitRemainder:e=>parseInt(e.padEnd(8,"0"),2),formatTime:t,progressPercent:(e,t)=>{const r=e.toString().padStart(2,"0").padStart(4," "),a=` [32m${r.slice(0,-1)}.${r.slice(-1)}%[39m`;process.stdout.cursorTo(t),process.stdout.write(a)},doneHavingStartedAt:e=>{const r=Date.now()-e;process.stdout.write(`\nDone after ${t(r)}\n`)},loadImage:e=>new Promise(((t,r)=>{const a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{t(a)},a.onerror=e=>{r(e)}})),sendPost:async(e,t,r)=>{const a=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await a.json();n.redirect&&(window.location=n.redirect),r&&r(n)}}}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,r),s.exports}(()=>{const{sendPost:e}=r(718),t=e=>console.log(e),a=r=>{r.preventDefault();const a=r.target.querySelector("#user").value,n=r.target.querySelector("#pass").value,s=r.target.querySelector("#_csrf").value;return a&&n?(e(r.target.action,{username:a,pass:n,_csrf:s}),!1):(t("Username or password is empty!"),!1)},n=r=>{r.preventDefault();const a=r.target.querySelector("#user").value,n=r.target.querySelector("#pass").value,s=r.target.querySelector("#pass2").value,o=r.target.querySelector("#_csrf").value;return a&&n&&s?n!==s?(t("Passwords do not match!"),!1):(e(r.target.action,{username:a,pass:n,pass2:s,_csrf:o}),!1):(t("All fields are required!"),!1)},s=e=>React.createElement("form",{id:"loginForm",name:"loginForm",onSubmit:a,action:"/login",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign in"})),o=e=>React.createElement("form",{id:"signupForm",name:"signupForm",onSubmit:n,action:"/signup",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"Password: "),React.createElement("input",{id:"pass2",type:"password",name:"pass2",placeholder:"retype password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign up"}));window.onload=async()=>{const e=await fetch("/token"),t=await e.json(),r=document.getElementById("loginButton"),a=document.getElementById("signupButton"),n=ReactDOM.createRoot(document.getElementById("loginContent"));r.addEventListener("click",(e=>(e.preventDefault(),n.render(React.createElement(s,{csrf:t.csrfToken})),!1))),a.addEventListener("click",(e=>(e.preventDefault(),n.render(React.createElement(o,{csrf:t.csrfToken})),!1))),n.render(React.createElement(s,{csrf:t.csrfToken}))}})()})();